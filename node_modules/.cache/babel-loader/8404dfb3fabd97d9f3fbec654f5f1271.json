{"ast":null,"code":"import _objectSpread from \"/Users/macbook/Iris/f-online-github-card-irisparedes/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/macbook/Iris/f-online-github-card-irisparedes/src/app/App.js\";\nimport React, { Component } from 'react';\nimport Main from './components/Main/Main';\nimport * as moment from 'moment';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchAdalabers = () => {\n      fetch(this.adalabersURL).then(response => response.json()).then(publicAdalabers => {\n        let adalabers = [];\n\n        for (const adalaber of publicAdalabers) {\n          adalabers.push(adalaber.login);\n        }\n\n        this.setState({\n          adalabers\n        });\n      }).catch(error => error);\n    };\n\n    this.handleSelect = event => {\n      this.fetchUser(event.target.value);\n    };\n\n    this.fetchUser = selectedAdalaber => {\n      fetch(this.userURL + selectedAdalaber).then(response => response.json()).then(adalaberInfo => {\n        const avatar_url = adalaberInfo.avatar_url,\n              blog = adalaberInfo.blog,\n              followers = adalaberInfo.followers,\n              following = adalaberInfo.following,\n              html_url = adalaberInfo.html_url,\n              name = adalaberInfo.name,\n              public_repos = adalaberInfo.public_repos,\n              location = adalaberInfo.location,\n              created_at = adalaberInfo.created_at;\n        this.setState({\n          adalaberInfo: {\n            selectedAdalaber,\n            avatar_url,\n            blog,\n            followers,\n            following,\n            html_url,\n            name,\n            public_repos,\n            location\n          }\n        });\n        this.calculateMemberSince(created_at);\n      }).catch(error => error);\n    };\n\n    this.state = {\n      dataIsReceived: false,\n      adalabers: [],\n      adalaberInfo: undefined\n    };\n    this.adalabersURL = 'https://api.github.com/orgs/adalab/members?per_page=200';\n    this.userURL = 'https://api.github.com/users/';\n  }\n\n  componentDidMount() {\n    this.fetchAdalabers();\n  }\n\n  calculateMemberSince(created_at) {\n    const adalaberInfo = this.state.adalaberInfo;\n\n    if (adalaberInfo) {\n      const created = moment(created_at);\n      const today = moment();\n      let years, months, days, sinceWhen;\n\n      const _years = today.diff(created, 'year');\n\n      created.add(_years, 'years');\n\n      if (_years === 0) {\n        years = '';\n      } else if (_years === 1) {\n        years = '1 año';\n      } else {\n        years = \"\".concat(_years, \" a\\xF1os\");\n      }\n\n      const _months = today.diff(created, 'months');\n\n      created.add(_months, 'months');\n\n      if (_months === 0) {\n        months = '';\n      } else if (_months === 1) {\n        months = '1 mes y ';\n      } else {\n        months = \"\".concat(_months, \" meses y \");\n      }\n\n      const yearMonthConnector = years === '' ? '' : months === '' ? ' y ' : ', ';\n\n      const _days = today.diff(created, 'days');\n\n      if (_days === 1) {\n        days = '1 día';\n      } else {\n        days = \"\".concat(_days, \" d\\xEDas\");\n      }\n\n      sinceWhen = years + yearMonthConnector + months + days;\n      this.setState({\n        adalaberInfo: _objectSpread({}, adalaberInfo, {\n          sinceWhen\n        })\n      });\n    }\n  }\n\n  render() {\n    const _this$state = this.state,\n          adalabers = _this$state.adalabers,\n          adalaberInfo = _this$state.adalaberInfo;\n    const handleSelect = this.handleSelect;\n    return React.createElement(Main, {\n      adalabers: adalabers,\n      handleSelect: handleSelect,\n      adalaberInfo: adalaberInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/macbook/Iris/f-online-github-card-irisparedes/src/app/App.js"],"names":["React","Component","Main","moment","App","constructor","props","fetchAdalabers","fetch","adalabersURL","then","response","json","publicAdalabers","adalabers","adalaber","push","login","setState","catch","error","handleSelect","event","fetchUser","target","value","selectedAdalaber","userURL","adalaberInfo","avatar_url","blog","followers","following","html_url","name","public_repos","location","created_at","calculateMemberSince","state","dataIsReceived","undefined","componentDidMount","created","today","years","months","days","sinceWhen","_years","diff","add","_months","yearMonthConnector","_days","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Main from './components/Main/Main';\nimport * as moment from 'moment';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n      dataIsReceived: false,\n      adalabers: [],\n      adalaberInfo: undefined\n    }\n  \n    this.adalabersURL = 'https://api.github.com/orgs/adalab/members?per_page=200';\n    this.userURL = 'https://api.github.com/users/'\n  };\n\n  componentDidMount() {\n    this.fetchAdalabers();\n  }\n\n  fetchAdalabers = () => {\n    fetch(this.adalabersURL)\n    .then(response => response.json())\n    .then(publicAdalabers => {\n      let adalabers = [];\n      for (const adalaber of publicAdalabers) {\n        adalabers.push(adalaber.login)\n      }\n      this.setState({ adalabers })\n    })\n    .catch(error => error);\n  }\n  \n    handleSelect = event => {\n      this.fetchUser( event.target.value )\n    }\n  \n  \n    fetchUser = selectedAdalaber => {\n      fetch(this.userURL + selectedAdalaber)\n      .then(response => response.json())\n      .then(adalaberInfo => {\n        const {\n          avatar_url,\n          blog,\n          followers,\n          following,\n          html_url,\n          name,\n          public_repos,\n          location,\n          created_at\n        } = adalaberInfo;\n  \n        this.setState({\n          adalaberInfo: {\n            selectedAdalaber,\n            avatar_url,\n            blog,\n            followers,\n            following,\n            html_url,\n            name,\n            public_repos,\n            location,\n          }\n        });\n        this.calculateMemberSince( created_at );\n      })\n      .catch(error => error);\n    }\n  \n  \n    calculateMemberSince( created_at ) {\n      const { adalaberInfo } = this.state;\n      if (adalaberInfo) {\n        const created = moment( created_at );\n        const today = moment();\n        let years, months, days, sinceWhen;\n  \n        const _years = today.diff(created, 'year');\n        created.add(_years, 'years');\n        if (_years === 0) {\n          years = '';\n        } else if (_years === 1) {\n          years = '1 año';\n        } else {\n          years = `${_years} años`;\n        }\n  \n        const _months = today.diff(created, 'months');\n        created.add(_months, 'months');\n        if (_months === 0) {\n          months = '';\n        } else if (_months === 1) {\n          months = '1 mes y ';\n        } else {\n          months = `${_months} meses y `;\n        }\n  \n        const yearMonthConnector =\n          years === '' ? ''\n          : months === '' ? ' y '\n          : ', '\n  \n        const _days = today.diff(created, 'days');\n        if (_days === 1) {\n          days = '1 día';\n        } else {\n          days = `${_days} días`;\n        }\n  \n        sinceWhen = years + yearMonthConnector + months + days;\n        this.setState({ adalaberInfo: { ...adalaberInfo, sinceWhen } });\n        }\n    }\n  \n  \n    render() {\n      const { adalabers, adalaberInfo } = this.state;\n      const { handleSelect } = this;\n  \n      return (\n        <Main\n          adalabers    = {adalabers}\n          handleSelect = {handleSelect}\n          adalaberInfo = {adalaberInfo}\n        />\n      );\n    }\n  }\n\nexport default App;"]},"metadata":{},"sourceType":"module"}